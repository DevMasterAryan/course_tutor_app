name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/*, bugfix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: course_tutor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and test with Docker Compose
      run: |
        # Build the application
        docker compose build
        
        # Create test database
        docker run --rm --network host -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/course_tutor_test -e RAILS_ENV=test course_tutor_app-web rails db:create
        
        # Run migrations
        docker run --rm --network host -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/course_tutor_test -e RAILS_ENV=test course_tutor_app-web rails db:migrate
        
        # Run tests
        docker run --rm --network host -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/course_tutor_test -e RAILS_ENV=test course_tutor_app-web bundle exec rspec
        
        # Clean up
        docker compose down

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          spec/examples.txt
          coverage/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.0'
        bundler-cache: true

    - name: Install dependencies
      run: |
        bundle install

    - name: Run RuboCop and auto-correct
      run: |
        # Auto-correct safe offenses
        bundle exec rubocop -a
        
        # Check if there are any remaining issues
        bundle exec rubocop --format progress

    - name: Commit auto-corrected changes
      if: always()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --quiet && git diff --staged --quiet || git commit -m "Auto-correct RuboCop offenses"
        git push

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.0'
        bundler-cache: true

    - name: Install dependencies
      run: |
        bundle install

    - name: Run Brakeman security check
      run: |
        bundle exec brakeman --no-progress --output-format json --output brakeman-report.json

    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: brakeman-report.json
        retention-days: 30 